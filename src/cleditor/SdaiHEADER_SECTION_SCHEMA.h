#ifndef  SDAIHEADER_SECTION_SCHEMA_H
#define  SDAIHEADER_SECTION_SCHEMA_H
// This file was generated by fedex_plus.  You probably don't want to edit
// it since your modifications will be lost if fedex_plus is used to
// regenerate it.
/* $Id$  */
#ifdef __O3DB__
#include <OpenOODB.h>
#endif

#ifndef  SCHEMA_H
#include <schema.h>
#endif

#ifdef PART26
#include <corbaIncludes.h> 
// Create a corbaSchema.h file in this directory with a #include in 
// it for your IDL generated schema-specific .hh file.
#include <corbaSchema.h> 
#endif 

/*	**************  TYPES  	*/

//	***** Build the SELECT Types  	

/*	**************  ENTITIES  	*/

//	***** Print Entity Classes  	

/////////	 ENTITY section_language

extern AttrDescriptor *a_0section;
extern AttrDescriptor *a_1default_language;

class SdaiSection_language  :    public SCLP23(Application_instance) {
  protected:
	SCLP23(String) _section ;    //  OPTIONAL
	SCLP23(String) _default_language ;
  public:  

	SdaiSection_language ( ); 
	SdaiSection_language (SCLP23(Application_instance) *se, int *addAttrs = 0); 
	SdaiSection_language (SdaiSection_language& e ); 
	~SdaiSection_language ();

#ifdef __O3DB__
	void oodb_reInit();
#endif

	int opcode ()  { return 0 ; } 
	const SdaiSection_name section_() const;
	void section_ (const SdaiSection_name x);

	const SdaiLanguage_name default_language_() const;
	void default_language_ (const SdaiLanguage_name x);

};

#if defined(__O3DB__)
inline SCLP23(Application_instance_ptr) 
create_SdaiSection_language () {  return (SCLP23(Application_instance_ptr)) new SdaiSection_language ;  }
#else
inline SdaiSection_language *
create_SdaiSection_language () {  return  new SdaiSection_language ;  }
#endif

/////////	 END_ENTITY section_language


/////////	 ENTITY file_population

extern AttrDescriptor *a_2governing_schema;
extern AttrDescriptor *a_3determination_method;
extern AttrDescriptor *a_4governed_sections;

class SdaiFile_population  :    public SCLP23(Application_instance) {
  protected:
	SCLP23(String) _governing_schema ;
	SCLP23(String) _determination_method ;
	StringAggregate _governed_sections ;    //  OPTIONAL	  //  of  section_name

  public:  

	SdaiFile_population ( ); 
	SdaiFile_population (SCLP23(Application_instance) *se, int *addAttrs = 0); 
	SdaiFile_population (SdaiFile_population& e ); 
	~SdaiFile_population ();

#ifdef __O3DB__
	void oodb_reInit();
#endif

	int opcode ()  { return 1 ; } 
	const SdaiSchema_name governing_schema_() const;
	void governing_schema_ (const SdaiSchema_name x);

	const SdaiExchange_structure_identifier determination_method_() const;
	void determination_method_ (const SdaiExchange_structure_identifier x);

	const StringAggregate_ptr governed_sections_() const;
	void governed_sections_ (const StringAggregate_ptr x);

};

#if defined(__O3DB__)
inline SCLP23(Application_instance_ptr) 
create_SdaiFile_population () {  return (SCLP23(Application_instance_ptr)) new SdaiFile_population ;  }
#else
inline SdaiFile_population *
create_SdaiFile_population () {  return  new SdaiFile_population ;  }
#endif

/////////	 END_ENTITY file_population


/////////	 ENTITY file_name

extern AttrDescriptor *a_5name;
extern AttrDescriptor *a_6time_stamp;
extern AttrDescriptor *a_7author;
extern AttrDescriptor *a_8organization;
extern AttrDescriptor *a_9preprocessor_version;
extern AttrDescriptor *a_10originating_system;
extern AttrDescriptor *a_11authorization;

class SdaiFile_name  :    public SCLP23(Application_instance) {
  protected:
	SCLP23(String) _name ;
	SCLP23(String) _time_stamp ;
	StringAggregate _author ;
	StringAggregate _organization ;
	SCLP23(String) _preprocessor_version ;
	SCLP23(String) _originating_system ;
	SCLP23(String) _authorization ;
  public:  

	SdaiFile_name ( ); 
	SdaiFile_name (SCLP23(Application_instance) *se, int *addAttrs = 0); 
	SdaiFile_name (SdaiFile_name& e ); 
	~SdaiFile_name ();

#ifdef __O3DB__
	void oodb_reInit();
#endif

	int opcode ()  { return 2 ; } 
	const SCLP23(String) name_() const;
	void name_ (const SCLP23(String) x);

	const SdaiTime_stamp_text time_stamp_() const;
	void time_stamp_ (const SdaiTime_stamp_text x);

	const StringAggregate_ptr author_() const;
	void author_ (const StringAggregate_ptr x);

	const StringAggregate_ptr organization_() const;
	void organization_ (const StringAggregate_ptr x);

	const SCLP23(String) preprocessor_version_() const;
	void preprocessor_version_ (const SCLP23(String) x);

	const SCLP23(String) originating_system_() const;
	void originating_system_ (const SCLP23(String) x);

	const SCLP23(String) authorization_() const;
	void authorization_ (const SCLP23(String) x);

};

#if defined(__O3DB__)
inline SCLP23(Application_instance_ptr) 
create_SdaiFile_name () {  return (SCLP23(Application_instance_ptr)) new SdaiFile_name ;  }
#else
inline SdaiFile_name *
create_SdaiFile_name () {  return  new SdaiFile_name ;  }
#endif

/////////	 END_ENTITY file_name


/////////	 ENTITY section_context

extern AttrDescriptor *a_12section;
extern AttrDescriptor *a_13context_identifiers;

class SdaiSection_context  :    public SCLP23(Application_instance) {
  protected:
	SCLP23(String) _section ;    //  OPTIONAL
	StringAggregate _context_identifiers ;	  //  of  context_name

  public:  

	SdaiSection_context ( ); 
	SdaiSection_context (SCLP23(Application_instance) *se, int *addAttrs = 0); 
	SdaiSection_context (SdaiSection_context& e ); 
	~SdaiSection_context ();

#ifdef __O3DB__
	void oodb_reInit();
#endif

	int opcode ()  { return 3 ; } 
	const SdaiSection_name section_() const;
	void section_ (const SdaiSection_name x);

	const StringAggregate_ptr context_identifiers_() const;
	void context_identifiers_ (const StringAggregate_ptr x);

};

#if defined(__O3DB__)
inline SCLP23(Application_instance_ptr) 
create_SdaiSection_context () {  return (SCLP23(Application_instance_ptr)) new SdaiSection_context ;  }
#else
inline SdaiSection_context *
create_SdaiSection_context () {  return  new SdaiSection_context ;  }
#endif

/////////	 END_ENTITY section_context


/////////	 ENTITY file_description

extern AttrDescriptor *a_14description;
extern AttrDescriptor *a_15implementation_level;

class SdaiFile_description  :    public SCLP23(Application_instance) {
  protected:
	StringAggregate _description ;
	SCLP23(String) _implementation_level ;
  public:  

	SdaiFile_description ( ); 
	SdaiFile_description (SCLP23(Application_instance) *se, int *addAttrs = 0); 
	SdaiFile_description (SdaiFile_description& e ); 
	~SdaiFile_description ();

#ifdef __O3DB__
	void oodb_reInit();
#endif

	int opcode ()  { return 4 ; } 
	const StringAggregate_ptr description_() const;
	void description_ (const StringAggregate_ptr x);

	const SCLP23(String) implementation_level_() const;
	void implementation_level_ (const SCLP23(String) x);

};

#if defined(__O3DB__)
inline SCLP23(Application_instance_ptr) 
create_SdaiFile_description () {  return (SCLP23(Application_instance_ptr)) new SdaiFile_description ;  }
#else
inline SdaiFile_description *
create_SdaiFile_description () {  return  new SdaiFile_description ;  }
#endif

/////////	 END_ENTITY file_description


/////////	 ENTITY file_schema

extern AttrDescriptor *a_16schema_identifiers;

class SdaiFile_schema  :    public SCLP23(Application_instance) {
  protected:
	StringAggregate _schema_identifiers ;	  //  of  schema_name

  public:  

	SdaiFile_schema ( ); 
	SdaiFile_schema (SCLP23(Application_instance) *se, int *addAttrs = 0); 
	SdaiFile_schema (SdaiFile_schema& e ); 
	~SdaiFile_schema ();

#ifdef __O3DB__
	void oodb_reInit();
#endif

	int opcode ()  { return 5 ; } 
	const StringAggregate_ptr schema_identifiers_() const;
	void schema_identifiers_ (const StringAggregate_ptr x);

};

#if defined(__O3DB__)
inline SCLP23(Application_instance_ptr) 
create_SdaiFile_schema () {  return (SCLP23(Application_instance_ptr)) new SdaiFile_schema ;  }
#else
inline SdaiFile_schema *
create_SdaiFile_schema () {  return  new SdaiFile_schema ;  }
#endif

/////////	 END_ENTITY file_schema


//	***** generate Model related pieces

class SdaiModel_contents_header_section_schema : public SCLP23(Model_contents) {

  public:
    SdaiModel_contents_header_section_schema();

    SdaiSection_language__set_var SdaiSection_language_get_extents();

    SdaiFile_population__set_var SdaiFile_population_get_extents();

    SdaiFile_name__set_var SdaiFile_name_get_extents();

    SdaiSection_context__set_var SdaiSection_context_get_extents();

    SdaiFile_description__set_var SdaiFile_description_get_extents();

    SdaiFile_schema__set_var SdaiFile_schema_get_extents();

};


typedef SdaiModel_contents_header_section_schema * SdaiModel_contents_header_section_schema_ptr;
typedef SdaiModel_contents_header_section_schema_ptr SdaiModel_contents_header_section_schema_var;
SCLP23(Model_contents_ptr) create_SdaiModel_contents_header_section_schema();
#endif
